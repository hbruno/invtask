"""
Django settings for invtask project.

Generated by 'django-admin startproject' using Django 1.11.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import environ

from django.core.exceptions import ImproperlyConfigured


env = environ.Env(
    DEBUG=(bool, False),
    DEPLOYMENT=(str, 'prod'),
    SECRET_KEY=(str, 'o6syhay2x%l^6(8q02(1y$m$8d%t#zz--20h-$fkkwsd_ontr_'),
)

# Build paths inside the project like this: base('desired/local/path')
# - the path containing manage.py
#   (e.g. ~/code/invtask)
base = environ.Path(__file__) - 3
BASE_DIR = base()
# - the Django project root containing settings.py
# (e.g. ~/code/invtask/invtask)
root = environ.Path(__file__) - 2
PROJECT_ROOT = root()

environ.Env.read_env(env_file=base('.env'))

# SECURITY WARNING: set this to a secret value before deploying to production!
SECRET_KEY = env('SECRET_KEY')  # default used if not in os.environ

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG')  # False if not in os.environ

# Allow all host headers
ALLOWED_HOSTS = ['*']


# Application definition
# I left this by default but for invtask app we don't need any of this apps.
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

THIRD_PARTY_APPS = [
    'django_extensions',
    'tastypie',
]

INVTASK_APPS = [
    'invtask.api',
    'invtask.consumer',
]

INSTALLED_APPS += THIRD_PARTY_APPS + INVTASK_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'invtask.app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'invtask.app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': env.db(),
    # I found some troubles when testing with postgres so for a quick setup run test over sqlite
    # 'default': {
    #    'ENGINE': 'django.db.backends.sqlite3',
    #    'NAME': base('invtask.db3'),
    # }
}

TASTYPIE_DEFAULT_FORMATS = ['json']


# CELERY SETTINGS
BROKER_URL = env('REDIS_URL')
CELERY_RESULT_BACKEND = env('REDIS_URL')
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'

DEPLOYMENT = env('DEPLOYMENT')

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

# Seconds value used only when DEBUG is active to sleep thread
TASK_SLEEP = 60

# TWITTER
# INVTASK APP
TWITTER_API_URL = 'https://api.twitter.com/1.1'
TWITTER_CLIENT_KEY = env('TWITTER_CLIENT_KEY')
TWITTER_CLIENT_SECRET = env('TWITTER_CLIENT_SECRET')
TWITTER_ACCESS_TOKEN = env('TWITTER_ACCESS_TOKEN')
TWITTER_ACCESS_TOKEN_SECRET = env('TWITTER_ACCESS_TOKEN_SECRET')
